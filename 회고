1. 한 주의 흐름
1) 프로젝트 명: 머신러닝을 이용해 사물인식 페이지 만들기
필수 작업: 로그인, 회원가입, 글 작성, 글 삭제, 사물 인식
추가 작업: 좋아요, 프로필 사진 변경, 개인 프로필 변경, 가입 시 이메일 인증, 서드파티 로그인




2) 느낀점
 
하경수 : 
처음엔 아직 머신러닝을 제대로 이해 못한 상태에서 타이트한 일정으로 프로젝트를 해야 한다는 것에 큰 막막함이 몰려왔다.
그 막막함은 현실이 되어 돌아왔고, 처음에는 머신러닝으로 어떤것을 구현해야할지 갈팡질팡 하다가 튜터님의 조언을 듣고
다행히 지금의 결과물을 낼 수 있었다.
저번 인스타 클론 코딩을 할때 튜터님들이 해주신 조언들을 따라 깃을 사용하고, 노션을 만들어 해야할 일과 진행상황,
트러블 슈팅등을 관리 하니까 저번 프로젝트보다 훨씬 수월하고 서로 소통도 잘되어서 좋았다.


     

 
김인해 :
계획? 그것은 틀어지기 마련이라 내 계획은 ㅁ..
업무 분담시 기능별로 분담 했는데 너무 세밀하게 분담 된건가? 하는 생각이 들었다.
상세페이지가 완성 된 후 댓글 구현이 원활하게 가능하고 이런 부분들이 업무 진행에 문제가 됐다.

보이지 않는 검이 가장 무서운 ㅂ...
이번에도 프론트에서 자꾸 막히는 부분을 넘어가지 않고 해결하려고 노력하고 있었다.
프론트를 정말 간단하게 만들고 우리는 장고를 더 깊게 이해하는 시간을 가졌어야 되는데 또 보이는 것에 현혹 됐다.

직무유기인가?
업무분담을 한 후 Comment part를 맡은 나는 나중에 제작되는 부분이잖아? 라며 계속해서 딴짓을 하며 시간을 보냈다.
직무유기가 맞다 반성한다 팀원들의 어깨에 짐을 너무 많이 지게했다.

그놈의 README
또 안해서 피드백 때 혼났다 아 정말 참...

그래도 잘한것
팀원들이 트러블 슈팅을 잘 작성해주어서 팀원이 한명 없는 것과 같은 상황에서 잘 해결됐다. 정말 트러블 슈팅 중요하다.

앞으로는..
혼자서 기능 하나는 2시간 안에 구현하는 개발자가 되어보자
학습과 다시 친해지자


이태규 :
머신러닝을 배우면서 이걸 어떻게 적용시키지 ? 라는 의문이 들었고 실제로 강의의 실습부분에서도 그냥 따라치는 정도에 그쳤다.
이번 프로젝트를 하며 가이드라인이 명확하지않아 고민이 많았지만, 튜터님과의 상담 후 방향을 잡고 딥러닝을 통해 학습하는것이 아니라
학습된 모델을 다루는 것에 초점을 맞추니 머신러닝에 대해 한발 더 다가간 것 같다. 비록 이번에 머신러닝의 한 부분만을 다뤘지만,
이 경험으로 머신러닝의 더 심화된 학습을 할 수 있는 발판을 마련한것 같아 의미가 있는 프로젝트가 되었다...


천승현 : 
이번 프로젝트를 통해서 아직 많이부족하지만 저번 프로젝트에 비해 실력이 진짜 손톱만큼 늘었다는 느낌을 받았습니다. django프로젝트나 앱 자체도 만들기도 
힘들었던 지난날을 기억하면 이번엔 무려 게시판을 구현을 했지만 아직 많이 부족하다는 느낌은 남아있는것 같았습니다. 

게시판 구현을 하면서 가장 어려웠던 부분은 이 게시판앱에 대한 흐름을 찾지못했다는것이 아쉬웠습니다. 단순히 쉽고 적은 코드안에서는 그 흐름을 찾는건 쉬웠는데
여러개 합쳐놓은 코드안에서 흐름을 찾다보니 헷갈리고 그러다보니 원래 알던 지식들도 가물가물해져서 코딩을 하는 속도도 매우 느리다는것을 많이 느꼈습니다.2시간
그리고 원하는 값을 html에 출력을 해주어야하는데 html에 대한 지식이 부족한 탓에 프론트엔드쪽에서도 어려움을 겪어서 공부가 필요하다는 것을 느꼈습니다.2시간
머신러닝 부분은 아직 기초부분이지만 yolo를 이용하여 사물을 인식하고 그 태그를 다는기능을 이해하면서 아직 첫발이지만 흥미롭게 이해할 수 있었습니다. 물론
더더욱 심화과정으로 가기 위해서 더 많은공부가 필요할 듯 보입니다. 그래도 프로젝트를 하면서 하루에 몇시간이상씩 코드를 다뤄보며 모르는부분은찾아서 이해하고 
팀원들이 서로 알려주고 순간순간 깨달으면서 조금이나마 실력에 보탬이 되는것같아서 다행이라는 생각이 들었습니다. 
결론 : 프로젝트를 통해서 어려움도 많고 아직 부족한점이 많지만 실력이 늘고있다는 느낌을 받아서 다행이다라는 느낌을 받았습니다. 


 
 
임동근 : 
태그 구현을 하면서 ManyToMany를 처음 실전으로 구현해봤는데, ManyToMany를 구현하는데 있어서 기본적인 django 지식 기반이 있어야 되는 것을 알았다!
그리고 아직 html DTL에 대해 지식이 모자란 것 같아 DTL에 대해서도 좀 공부하고 후에는 DTL도 자유롭게 쓸 수 있도록 노력해야겠다. 
이제 DJAGNO의 기본적인 틀에 대해 이해가 되었고, 기본적인 로그인, 회원가입 등의 기능 구현이 가능하게 되었다. 
이번 프로젝트를 진행하면서 2주 전에 진행하였던 나의 지식과 현재의 지식을 비교하면 다른 것 같다. 좀 더 노력하여 다음 프로젝트 때에는 또 다른 성장이 있을 것이라 생각한다. 
물론 지금보다 더 열심히 노력하여 공부하고 지식을 늘려야한다는 전제하에!!
머신러닝도 아직 나에게는 어려운 것이 많았다. 하지만 적용할 때는 결국 python 문법 기반이 있어야 가능하다고 느꼈다.



2. Keep
모르는 것을 서로 나누는 점
팀원 모두가 주말과 공휴일을 반납하면서 까지 프로젝트에 몰두한 것
의견이 부딛힐 때 감정소모하는 것이 아닌 상충점을 모색하는 태도
서로가 부족한 점들이 다소 있으나 너그럽게 이해해주는 태도
모르는 부분을 직접적으로 알려주기보다는 직접 해보면서 개인의 능력을 키우는 방향으로 진행한 것
화기애애하고 강압적이지 않은 자유로운 분위기
피드백에 수용적인 태도
끊임없이 탐구하는 자세
남을 탓하지 않는 태도
모르는 부분이 있을 때 나무라지 않고 서로 알려준 점 

Problem

1) 문제
README.MD 작성을 안한 점
Git 커밋 중 커밋 메시지에 '진행 중'이라는 커밋을 남긴 점
절대경로와 상대경로에 대해 정확히 알지 못하여 <form> 작성 시 문제가 생겼던 점
ManyToMany는 DTL 작성법이 다른점을 구분하지 못함
변수 이름 직관적으로 정하기
구글링을 해서 코드를 보더라도 이해를 하지 못하고 쓰면 안됨
url 설계 다같이 해놓고 작업진행하기 -> 너무 다른 용어들이 난무...
테스트코드 Git에 올릴 때 확인하고 제거하기
꼭 필요한 주석만 남겨놓지 않은 점
보안상 올리지 말아야 할 것들을 GITHUB에 올린 점
 
2) 원인경험부족 -> 
-여기가 추가 된거
README.MD 꼭 쓰자..., 제발 백만 보자... 대충하자 프론트 제발... 미안해요 여러분...
README.MD를 GitHub내에서 작성을 해서 올려두고 그 안에서 프로젝트의 목적과 팀원들의 기술 작성 내역을 볼 수 있도록 꼭 쓴다.
선 복붙 후 이해가 아닌 선 이해 후 복붙을 하자
다양한 모델필드를 이해하기
커밋메시지를 직관적이고 미리 기준을 정해서 작성하기


 
4. Try

README는 S.A 작성 후 기반을 만들어 놓고 트러블슈팅이 있을 때에도 README에 작성을 한다.
테스트코드, 주석 등 올려도 되지 않을 코드들을 확인하고 꼼꼼히 보고 제거한다.
실수하지 않고 꼼꼼히 확인하면서 보안상 문제가 있을 만한 요소들은 제거하고 GIT에 올린다.
미리 커밋작성 요령을 통일하고 프로젝트를 진행한다.
Django에 대한 지식을 좀 더 키워서 진행한다.